{
    "swagger": "2.0",
    "info": {
        "title": "OLIKER Api endpoint",
        "description": "OLIKER Api endpoint for webservices",
        "contact": {
            "name": "Agriya Infoway",
            "url": "http://www.agriya.com",
            "email": "info@agriya.com"
        },
        "license": {
            "name": "Agriya Infoway Licence",
            "url": "http://www.agriya.com/"
        },
        "version": "v1.0b1"
    },
    "produces": [
        "application/json"
    ],
    "paths": {
        "/oauth/token": {
            "get": {
                "summary": "Generate guest token",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Guest token generated"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/oauth/refresh_token": {
            "get": {
                "summary": "Generate refresh token",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Refresh token generated"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "summary": "User register",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/activation/{hash}": {
            "put": {
                "summary": "Send activation mail",
                "description": "Send activation hash code to user for activation",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to send activation mail",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Sent activation mail successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "summary": "User login",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The login JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User loggedin successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/social_login": {
            "post": {
                "summary": "User social login",
                "description": "User social login",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "code(Facebook | google) and oauth_verifier oauth_token (Twitter)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSociallogin"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "User social login for Twitter",
                "description": "User social login for Twitter",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Provider slug",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Loggedin successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/forgot_password": {
            "post": {
                "summary": "Forgot password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The forgot password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/forgotPasswordUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Forgot password request sent successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/change_password": {
            "put": {
                "summary": "Change password",
                "description": "Change password",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to change password",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The change password JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/changePasswordUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Password changed sucessfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "summary": "Logout user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Fetch all users",
                "description": "Returns all users from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched users",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "Fetch my user profile",
                "description": "Returns a user profile",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "summary": "Fetch user",
                "description": "Returns a user based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user by its id",
                "description": "Update user by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user",
                "description": "Deletes a single user based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/paypal/vaults": {
            "get": {
                "summary": "Fetch all vaults",
                "description": "Returns all vaults from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "from user Id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PayPal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched vaults",
                        "schema": {
                            "$ref": "#/definitions/PaypalVault"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new vault",
                "description": "Creates a new vault",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The vault JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPaypalVault"
                        }
                    }
                ],
                "tags": [
                    "PayPal"
                ],
                "responses": {
                    "200": {
                        "description": "New vault added",
                        "schema": {
                            "$ref": "#/definitions/PaypalVault"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/paypal/vaults/{vaultId}": {
            "get": {
                "summary": "Update vault by its id",
                "description": "Update vault by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "vaultId",
                        "in": "path",
                        "description": "ID of vault to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PayPal"
                ],
                "responses": {
                    "200": {
                        "description": "Vault updated",
                        "schema": {
                            "$ref": "#/definitions/PaypalVault"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete vault",
                "description": "Deletes a single vault based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "vaultId",
                        "in": "path",
                        "description": "ID of vault to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PayPal"
                ],
                "responses": {
                    "200": {
                        "description": "Vault deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/plugins": {
            "get": {
                "summary": "Fetch all Plugins",
                "description": "Returns all Plugins from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Plugins"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Plugins",
                        "schema": {
                            "$ref": "#/definitions/Plugin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
             },
            "put": {
                "summary": "Update plugin by its id",
                "description": "Update plugin by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The review JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updatePlugin"
                        }
                    }
                ],
                "tags": [
                    "Plugins"
                ],
                "responses": {
                    "200": {
                        "description": "Review updated",
                        "schema": {
                            "$ref": "#/definitions/Plugin"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }             
			},        
        "/providers": {
            "get": {
                "summary": "Fetch all providers",
                "description": "Returns all providers from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter provider",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched providers",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/providers/{providerId}": {
            "get": {
                "summary": "Fetch provider",
                "description": "Returns a provider based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched provider",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update provider by its id",
                "description": "Update provider by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "providerId",
                        "in": "path",
                        "description": "ID of provider to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The provider JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addProvider"
                        }
                    }
                ],
                "tags": [
                    "Provider"
                ],
                "responses": {
                    "200": {
                        "description": "Provider updated",
                        "schema": {
                            "$ref": "#/definitions/Provider"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "summary": "Fetch all roles",
                "description": "Returns all roles from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter role",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched roles",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles/{roleId}": {
            "get": {
                "summary": "Fetch role",
                "description": "Returns a role based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "ID of role to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Role"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched role",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts": {
            "get": {
                "summary": "Fetch all money transfer accounts",
                "description": "Returns all money transfer accounts from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter money transfer account",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer accounts",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new money transfer account",
                "description": "Creates a new money transfer account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "New money transfer account added",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Fetch money transfer account",
                "description": "Returns a money transfer account based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer account",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update money transfer account by its id",
                "description": "Update money transfer account by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account updated",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete money transfer account",
                "description": "Deletes a single money transfer account based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/money_transfer_accounts": {
            "get": {
                "summary": "Fetch all money transfer accounts",
                "description": "Returns all money transfer accounts from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter money transfer account",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit for records",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer accounts",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new money transfer account",
                "description": "Creates a new money transfer account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "New money transfer account added",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/money_transfer_accounts/{moneyTransferAccountId}": {
            "get": {
                "summary": "Fetch money transfer account",
                "description": "Returns a money transfer account based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched money transfer account",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update money transfer account by its id",
                "description": "Update money transfer account by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The money transfer account JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMoneyTransferAccount"
                        }
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account updated",
                        "schema": {
                            "$ref": "#/definitions/MoneyTransferAccount"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete money transfer account",
                "description": "Deletes a single money transfer account based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "moneyTransferAccountId",
                        "in": "path",
                        "description": "ID of money transfer account to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "MoneyTransferAccount"
                ],
                "responses": {
                    "200": {
                        "description": "Money Transfer Account deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/withdrawal_statuses": {
            "get": {
                "summary": "Fetch all withdrawal statuses",
                "description": "Returns all withdrawal statuses from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "WithdrawalStatus"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched withdrawal statuses",
                        "schema": {
                            "$ref": "#/definitions/WithdrawalStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals": {
            "get": {
                "summary": "Fetch all user cash withdrawals",
                "description": "Returns all user cash withdrawals from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user id filter ",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "money_transfer_account_id",
                        "in": "query",
                        "description": "money transfer account ID filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "withdrawal_status_id",
                        "in": "query",
                        "description": "withdrawal status id filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_cash_withdrawals/{userCashWithdrawalId}": {
            "delete": {
                "summary": "Delete user cash withdrawal",
                "description": "Deletes a single user cash withdrawal based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "User Cash Withdrawal deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },        
        "/users/{userId}/user_cash_withdrawals": {
            "get": {
                "summary": "Fetch all user cash withdrawals",
                "description": "Returns all user cash withdrawals from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawals",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user cash withdrawal",
                "description": "Creates a new user cash withdrawal",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "New user cash withdrawal added",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/user_cash_withdrawals/{userCashWithdrawalId}": {
            "get": {
                "summary": "Fetch user cash withdrawal",
                "description": "Returns a user cash withdrawal based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user cash withdrawal",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user cash withdrawal by its id",
                "description": "Update user cash withdrawal by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "userCashWithdrawalId",
                        "in": "path",
                        "description": "ID of user cash withdrawal to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user cash withdrawal JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserCashWithdrawal"
                        }
                    }
                ],
                "tags": [
                    "UserCashWithdrawal"
                ],
                "responses": {
                    "200": {
                        "description": "User Cash Withdrawal updated",
                        "schema": {
                            "$ref": "#/definitions/UserCashWithdrawal"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "summary": "Fetch all contacts",
                "description": "Returns all contacts from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contacts",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new contact",
                "description": "Creates a new contact",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The contact JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addContact"
                        }
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "New contact added",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/contacts/{contactId}": {
            "get": {
                "summary": "Fetch contact",
                "description": "Returns a contact based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched contact",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete contact",
                "description": "Deletes a single contact based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "contactId",
                        "in": "path",
                        "description": "ID of contact to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Contact"
                ],
                "responses": {
                    "200": {
                        "description": "Contact deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "summary": "Fetch all transactions",
                "description": "Returns all transactions from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched transactions",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/users/{userId}/transactions": {
            "get": {
                "summary": "Fetch user wise transactions",
                "description": "Returns user wise transactions from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of user to fetch transaction",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "limit for records",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Transactions"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user transactions",
                        "schema": {
                            "$ref": "#/definitions/Transaction"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways": {
            "get": {
                "summary": "Fetch all payment gateways",
                "description": "Returns all payment gateways from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter payment gateway",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateways",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/{paymentGatewayId}": {
            "get": {
                "summary": "Fetch payment gateway",
                "description": "Returns a payment gateway based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched payment gateway",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update payment gateway by its id",
                "description": "Update payment gateway by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "ID of payment gateway to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The payment gateway JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPaymentGateway"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Payment Gateway updated",
                        "schema": {
                            "$ref": "#/definitions/PaymentGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/zazpay_synchronize": {
            "get": {
                "summary": "Synchronize ZazPay gateways",
                "description": "Synchronize ZazPay gateways",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "ZazPay payment gateways synchronized"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateway_settings/{paymentGatewayId}": {
            "put": {
                "summary": "Updated Payment Gateway Settings information",
                "description": "Updated Payment Gateway Settings information",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "paymentGatewayId",
                        "in": "path",
                        "description": "PaymentGatewayId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update payment gateway settings",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addRestaurantAddon"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Updated addons information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/updatePaymentGateways"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/payment_gateways/list": {
            "get": {
                "summary": "Filter  payment gateways",
                "description": "Filter payment gateways",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Filter payment gateways."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/get_gateways": {
            "get": {
                "summary": "Get gateways details",
                "description": "Get gateways details",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "Get gateways details."
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/post_gateways": {
            "post": {
                "summary": "Create new post gateway",
                "description": "Create new post gateway",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The post gateway JSON you want to post.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPostGateway"
                        }
                    }
                ],
                "tags": [
                    "PaymentGateway"
                ],
                "responses": {
                    "200": {
                        "description": "New PostGateway added.",
                        "schema": {
                            "$ref": "#/definitions/addPostGateway"
                        }
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages": {
            "get": {
                "summary": "Fetch all pages",
                "description": "Returns all pages from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter page",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pages",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new page",
                "description": "Creates a new page",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "New page added",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/pages/{pageId}": {
            "get": {
                "summary": "Fetch page",
                "description": "Returns a page based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched page",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update page by its id",
                "description": "Update page by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The page JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addPage"
                        }
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page updated",
                        "schema": {
                            "$ref": "#/definitions/Page"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete page",
                "description": "Deletes a single page based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "pageId",
                        "in": "path",
                        "description": "ID of page to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Page"
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories": {
            "get": {
                "summary": "Fetch all setting categories",
                "description": "Returns all setting categories from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting categories",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/setting_categories/{settingCategoryId}": {
            "get": {
                "summary": "Fetch setting category",
                "description": "Returns a setting category based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingCategoryId",
                        "in": "path",
                        "description": "ID of setting category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "SettingCategory"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting category",
                        "schema": {
                            "$ref": "#/definitions/SettingCategory"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "summary": "Fetch all settings",
                "description": "Returns all settings from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "setting_category_id",
                        "in": "query",
                        "description": "ID of setting category to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched settings",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/settings/{settingId}": {
            "get": {
                "summary": "Fetch setting",
                "description": "Returns a setting based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched setting",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update setting by its id",
                "description": "Update setting by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "ID of setting to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The setting JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addSetting"
                        }
                    }
                ],
                "tags": [
                    "Setting"
                ],
                "responses": {
                    "200": {
                        "description": "Setting updated",
                        "schema": {
                            "$ref": "#/definitions/Setting"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates": {
            "get": {
                "summary": "Fetch all email templates",
                "description": "Returns all email templates from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email templates",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/email_templates/{emailTemplateId}": {
            "get": {
                "summary": "Fetch email template",
                "description": "Returns a email template based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched email template",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update email template by its id",
                "description": "Update email template by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "emailTemplateId",
                        "in": "path",
                        "description": "ID of email template to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The email template JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addEmailTemplate"
                        }
                    }
                ],
                "tags": [
                    "EmailTemplate"
                ],
                "responses": {
                    "200": {
                        "description": "Email Template updated",
                        "schema": {
                            "$ref": "#/definitions/EmailTemplate"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities": {
            "get": {
                "summary": "Fetch all cities",
                "description": "Returns all cities from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter city",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched cities",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new city",
                "description": "Creates a new city",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "New city added",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/cities/{cityId}": {
            "get": {
                "summary": "Fetch city",
                "description": "Returns a city based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched city",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update city by its id",
                "description": "Update city by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The city JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCity"
                        }
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City updated",
                        "schema": {
                            "$ref": "#/definitions/City"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete city",
                "description": "Deletes a single city based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "cityId",
                        "in": "path",
                        "description": "ID of city to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "City"
                ],
                "responses": {
                    "200": {
                        "description": "City deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states": {
            "get": {
                "summary": "Fetch all states",
                "description": "Returns all states from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter state",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Country Id",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched states",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new state",
                "description": "Creates a new state",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "New state added",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/states/{stateId}": {
            "get": {
                "summary": "Fetch state",
                "description": "Returns a state based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched state",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update state by its id",
                "description": "Update state by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The state JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addState"
                        }
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State updated",
                        "schema": {
                            "$ref": "#/definitions/State"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete state",
                "description": "Deletes a single state based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "stateId",
                        "in": "path",
                        "description": "ID of state to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "State"
                ],
                "responses": {
                    "200": {
                        "description": "State deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "summary": "Fetch all countries",
                "description": "Returns all countries from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched countries",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new country",
                "description": "Creates a new country",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "New country added",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/countries/{countryId}": {
            "get": {
                "summary": "Fetch country",
                "description": "Returns a country based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched country",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update country by its id",
                "description": "Update country by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The country JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCountry"
                        }
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country updated",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete country",
                "description": "Deletes a single country based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "countryId",
                        "in": "path",
                        "description": "ID of country to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Country"
                ],
                "responses": {
                    "200": {
                        "description": "Country deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "summary": "Fetch all languages",
                "description": "Returns all languages from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter language",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched languages",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new language",
                "description": "Creates a new language",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "New language added",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/languages/{languageId}": {
            "get": {
                "summary": "Fetch language",
                "description": "Returns a language based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched language",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update language by its id",
                "description": "Update language by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The language JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addLanguage"
                        }
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language updated",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete language",
                "description": "Deletes a single language based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "ID of language to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Language"
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "summary": "Site stats",
                "description": "Site stats",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Stats"
                ],
                "responses": {
                    "200": {
                        "description": "Site stats"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments": {
            "post": {
                "summary": "Upload attachment",
                "description": "Upload attachment",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "class",
                        "in": "query",
                        "description": "Class name (UserAvatar, Category, Ad, Message).",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "File uploaded successfully"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/attachments/{attachmentId}": {
            "delete": {
                "summary": "Delete attachment",
                "description": "Deletes a single attachment based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "ID of attachment to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Attachment"
                ],
                "responses": {
                    "200": {
                        "description": "Attachment deleted"
                    },
                    "default": {
                        "description": "Unexpected error.",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },          
        "/wallets": {
            "get": {
                "summary": "Fetch all wallets",
                "description": "Returns all wallets from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched wallets",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new wallet",
                "description": "Creates a new wallet",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The wallet JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addWallet"
                        }
                    }
                ],
                "tags": [
                    "Wallet"
                ],
                "responses": {
                    "200": {
                        "description": "New wallet added",
                        "schema": {
                            "$ref": "#/definitions/Wallet"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_notifications": {
            "get": {
                "summary": "Fetch all user notifications",
                "description": "Returns all user notifications from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserNotification"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user notifications",
                        "schema": {
                            "$ref": "#/definitions/UserNotification"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_notifications/{userNotificationId}": {
            "get": {
                "summary": "Fetch user notification",
                "description": "Returns a user notification based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userNotificationId",
                        "in": "path",
                        "description": "ID of user notification to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserNotification"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user notification",
                        "schema": {
                            "$ref": "#/definitions/UserNotification"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user notification by its id",
                "description": "Update user notification by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "userNotificationId",
                        "in": "path",
                        "description": "ID of user notification to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user notification JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserNotification"
                        }
                    }
                ],
                "tags": [
                    "UserNotification"
                ],
                "responses": {
                    "200": {
                        "description": "User Notification updated",
                        "schema": {
                            "$ref": "#/definitions/UserNotification"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_ad_extras": {
            "get": {
                "summary": "Fetch all user ad extras",
                "description": "Returns all user ad extras from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "UserAdExtra"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user ad extras",
                        "schema": {
                            "$ref": "#/definitions/UserAdExtra"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user ad extra",
                "description": "Creates a new user ad extra",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user ad extra JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAdExtra"
                        }
                    }
                ],
                "tags": [
                    "UserAdExtra"
                ],
                "responses": {
                    "200": {
                        "description": "New user ad extra added",
                        "schema": {
                            "$ref": "#/definitions/UserAdExtra"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/user_ad_packages": {
            "get": {
                "summary": "Fetch all user ad packages",
                "description": "Returns all user ad packages from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ad_package_id",
                        "in": "query",
                        "description": "Ad package id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "UserAdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched user ad packages",
                        "schema": {
                            "$ref": "#/definitions/UserAdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new user ad package",
                "description": "Creates a new user ad package",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The user ad package JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addUserAdPackage"
                        }
                    }
                ],
                "tags": [
                    "UserAdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "New user ad package added",
                        "schema": {
                            "$ref": "#/definitions/UserAdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/messages": {
            "get": {
                "summary": "Fetch all messages",
                "description": "Returns all messages from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "(inbox/sent)",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "is_sender",
                        "in": "query",
                        "description": "is_sender value to search",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched messages",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new message",
                "description": "Creates a new message",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The message JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMessage"
                        }
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "New message added",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/messages/{messageId}": {
            "get": {
                "summary": "Fetch message",
                "description": "Returns a message based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "ID of message to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched message",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update message by its id",
                "description": "Update message by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "ID of message to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The message JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addMessage"
                        }
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Message updated",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete message",
                "description": "Deletes a single message based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "messageId",
                        "in": "path",
                        "description": "ID of message to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Message"
                ],
                "responses": {
                    "200": {
                        "description": "Message deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Fetch all categories",
                "description": "Returns all categories from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter category",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Keywords to parent id value",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_popular",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched categories",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new category",
                "description": "Creates a new category",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "New category added",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "get": {
                "summary": "Fetch category",
                "description": "Returns a category based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched category",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update category by its id",
                "description": "Update category by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The category JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addCategory"
                        }
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete category",
                "description": "Deletes a single category based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "form_field_id",
                        "in": "query",
                        "description": "ID of form field to delete",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/categories/{categoryId}/check_payment": {
            "get": {
                "summary": "Fetch category",
                "description": "Returns a category based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID of category to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched category",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
         },
        "/advertiser_types": {
            "get": {
                "summary": "Fetch all advertiser types",
                "description": "Returns all advertiser types from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdvertiserType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched advertiser types",
                        "schema": {
                            "$ref": "#/definitions/AdvertiserType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new advertiser type",
                "description": "Creates a new advertiser type",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The advertiser type JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdvertiserType"
                        }
                    }
                ],
                "tags": [
                    "AdvertiserType"
                ],
                "responses": {
                    "200": {
                        "description": "New advertiser type added",
                        "schema": {
                            "$ref": "#/definitions/AdvertiserType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/advertiser_types/{advertiserTypeId}": {
            "get": {
                "summary": "Fetch advertiser type",
                "description": "Returns a advertiser type based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "advertiserTypeId",
                        "in": "path",
                        "description": "ID of advertiser type to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdvertiserType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched advertiser type",
                        "schema": {
                            "$ref": "#/definitions/AdvertiserType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update advertiser type by its id",
                "description": "Update advertiser type by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "advertiserTypeId",
                        "in": "path",
                        "description": "ID of advertiser type to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The advertiser type JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdvertiserType"
                        }
                    }
                ],
                "tags": [
                    "AdvertiserType"
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser Type updated",
                        "schema": {
                            "$ref": "#/definitions/AdvertiserType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete advertiser type",
                "description": "Deletes a single advertiser type based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "advertiserTypeId",
                        "in": "path",
                        "description": "ID of advertiser type to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdvertiserType"
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser Type deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_packages": {
            "get": {
                "summary": "Fetch all ad packages",
                "description": "Returns all ad packages from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter ad package",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad packages",
                        "schema": {
                            "$ref": "#/definitions/AdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad package",
                "description": "Creates a new ad package",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad package JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdPackage"
                        }
                    }
                ],
                "tags": [
                    "AdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "New ad package added",
                        "schema": {
                            "$ref": "#/definitions/AdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_packages/{adPackageId}": {
            "get": {
                "summary": "Fetch ad package",
                "description": "Returns a ad package based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adPackageId",
                        "in": "path",
                        "description": "ID of ad package to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad package",
                        "schema": {
                            "$ref": "#/definitions/AdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad package by its id",
                "description": "Update ad package by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adPackageId",
                        "in": "path",
                        "description": "ID of ad package to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad package JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdPackage"
                        }
                    }
                ],
                "tags": [
                    "AdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Package updated",
                        "schema": {
                            "$ref": "#/definitions/AdPackage"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad package",
                "description": "Deletes a single ad package based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adPackageId",
                        "in": "path",
                        "description": "ID of ad package to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdPackage"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Package deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_extras": {
            "get": {
                "summary": "Fetch all ad extras",
                "description": "Returns all ad extras from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter by active / inactive",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdExtra"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad extras",
                        "schema": {
                            "$ref": "#/definitions/AdExtra"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_extras/{adExtraId}": {
            "get": {
                "summary": "Fetch ad extra",
                "description": "Returns a ad extra based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adExtraId",
                        "in": "path",
                        "description": "ID of ad extra to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdExtra"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad extra",
                        "schema": {
                            "$ref": "#/definitions/AdExtra"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad extra by its id",
                "description": "Update ad extra by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adExtraId",
                        "in": "path",
                        "description": "ID of ad extra to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad extra JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdExtra"
                        }
                    }
                ],
                "tags": [
                    "AdExtra"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Extra updated",
                        "schema": {
                            "$ref": "#/definitions/AdExtra"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_extra_days": {
            "get": {
                "summary": "Fetch all ad extra days",
                "description": "Returns all ad extra days from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter by active / inactive",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdExtraDay"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad extra days",
                        "schema": {
                            "$ref": "#/definitions/AdExtraDay"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad extra day",
                "description": "Creates a new ad extra day",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad extra day JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdExtraDay"
                        }
                    }
                ],
                "tags": [
                    "AdExtraDay"
                ],
                "responses": {
                    "200": {
                        "description": "New ad extra day added",
                        "schema": {
                            "$ref": "#/definitions/AdExtraDay"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_extra_days/{adExtraDayId}": {
            "get": {
                "summary": "Fetch ad extra day",
                "description": "Returns a ad extra day based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adExtraDayId",
                        "in": "path",
                        "description": "ID of ad extra day to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdExtraDay"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad extra day",
                        "schema": {
                            "$ref": "#/definitions/AdExtraDay"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad extra day by its id",
                "description": "Update ad extra day by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adExtraDayId",
                        "in": "path",
                        "description": "ID of ad extra day to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad extra day JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdExtraDay"
                        }
                    }
                ],
                "tags": [
                    "AdExtraDay"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Extra Day updated",
                        "schema": {
                            "$ref": "#/definitions/AdExtraDay"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad extra day",
                "description": "Deletes a single ad extra day based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adExtraDayId",
                        "in": "path",
                        "description": "ID of ad extra day to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdExtraDay"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Extra Day deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/search_keywords": {
            "get": {
                "summary": "Fetch all search keywords",
                "description": "Returns all search keywords from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Keywords to filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "SearchKeyword"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched Search Keywords",
                        "schema": {
                            "$ref": "#/definitions/SearchKeyword"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/me/ads": {
            "get": {
                "summary": "Fetch all my ads",
                "description": "Returns all my ads from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ad_id",
                        "in": "query",
                        "description": "Keywords to ad",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Keywords to filter",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched My ads",
                        "schema": {
                            "$ref": "#/definitions/Ad"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ads": {
            "get": {
                "summary": "Fetch all ads",
                "description": "Returns all ads from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "latitude",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "longitude",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_urgent",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": null
                    },
                    {
                        "name": "is_highlighted",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_show_as_top_ads",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_show_ad_in_top",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Keywords to user",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ad_id",
                        "in": "query",
                        "description": "Keywords to ad",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Keywords to filter(related)",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "advertiser_type_id",
                        "in": "query",
                        "description": "Advertiser type ids to search with comma separated",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "min_price",
                        "in": "path",
                        "description": "minimum ad price",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "max_price",
                        "in": "path",
                        "description": "maximum ad price",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "Keywords to City",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_search_in_description",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "is_only_ads_with_images",
                        "in": "query",
                        "description": "value must be true/false",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ads",
                        "schema": {
                            "$ref": "#/definitions/Ad"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad",
                "description": "Creates a new ad",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAd"
                        }
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "New ad added",
                        "schema": {
                            "$ref": "#/definitions/Ad"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ads/{adId}": {
            "get": {
                "summary": "Fetch ad",
                "description": "Returns a ad based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "ID of ad to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Keywords to type",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "show_number",
                        "in": "query",
                        "description": "Show Phone number(true/false)",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad",
                        "schema": {
                            "$ref": "#/definitions/Ad"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad by its id",
                "description": "Update ad by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "ID of ad to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAd"
                        }
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "Ad updated",
                        "schema": {
                            "$ref": "#/definitions/Ad"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad",
                "description": "Deletes a single ad based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "ID of ad to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "Ad"
                ],
                "responses": {
                    "200": {
                        "description": "Ad deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_favorites": {
            "get": {
                "summary": "Fetch all ad favorites",
                "description": "Returns all ad favorites from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "ad_id",
                        "in": "query",
                        "description": "Ad id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad favorites",
                        "schema": {
                            "$ref": "#/definitions/AdFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad favorite",
                "description": "Creates a new ad favorite",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad favorite JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdFavorite"
                        }
                    }
                ],
                "tags": [
                    "AdFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "New ad favorite added",
                        "schema": {
                            "$ref": "#/definitions/AdFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_favorites/{adFavoriteId}": {
            "get": {
                "summary": "Fetch ad favorite",
                "description": "Returns a ad favorite based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adFavoriteId",
                        "in": "path",
                        "description": "ID of ad favorite to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad favorite",
                        "schema": {
                            "$ref": "#/definitions/AdFavorite"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad favorite",
                "description": "Deletes a single ad favorite based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adFavoriteId",
                        "in": "path",
                        "description": "ID of ad favorite to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdFavorite"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Favorite deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_searches": {
            "get": {
                "summary": "Fetch all ad searches",
                "description": "Returns all ad searches from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "user id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad searches",
                        "schema": {
                            "$ref": "#/definitions/AdSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad search",
                "description": "Creates a new ad search",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad search JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdSearch"
                        }
                    }
                ],
                "tags": [
                    "AdSearch"
                ],
                "responses": {
                    "200": {
                        "description": "New ad search added",
                        "schema": {
                            "$ref": "#/definitions/AdSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_searches/{adSearchId}": {
            "get": {
                "summary": "Fetch ad search",
                "description": "Returns a ad search based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adSearchId",
                        "in": "path",
                        "description": "ID of ad search to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad search",
                        "schema": {
                            "$ref": "#/definitions/AdSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad search by its id",
                "description": "Update ad search by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adSearchId",
                        "in": "path",
                        "description": "ID of ad search to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad search JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdSearch"
                        }
                    }
                ],
                "tags": [
                    "AdSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Search updated",
                        "schema": {
                            "$ref": "#/definitions/AdSearch"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad search",
                "description": "Deletes a single ad search based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adSearchId",
                        "in": "path",
                        "description": "ID of ad search to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdSearch"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Search deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_report_types": {
            "get": {
                "summary": "Fetch all ad report types",
                "description": "Returns all ad report types from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdReportType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad report types",
                        "schema": {
                            "$ref": "#/definitions/AdReportType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad report type",
                "description": "Creates a new ad report type",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad report type JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdReportType"
                        }
                    }
                ],
                "tags": [
                    "AdReportType"
                ],
                "responses": {
                    "200": {
                        "description": "New ad report type added",
                        "schema": {
                            "$ref": "#/definitions/AdReportType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_report_types/{adReportTypeId}": {
            "get": {
                "summary": "Fetch ad report type",
                "description": "Returns a ad report type based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adReportTypeId",
                        "in": "path",
                        "description": "ID of ad report type to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdReportType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad report type",
                        "schema": {
                            "$ref": "#/definitions/AdReportType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update ad report type by its id",
                "description": "Update ad report type by its id",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adReportTypeId",
                        "in": "path",
                        "description": "ID of ad report type to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad report type JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdReportType"
                        }
                    }
                ],
                "tags": [
                    "AdReportType"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Report Type updated",
                        "schema": {
                            "$ref": "#/definitions/AdReportType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad report type",
                "description": "Deletes a single ad report type based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adReportTypeId",
                        "in": "path",
                        "description": "ID of ad report type to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdReportType"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Report Type deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_reports": {
            "get": {
                "summary": "Fetch all ad reports",
                "description": "Returns all ad reports from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Keywords to limit",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ad_id",
                        "in": "query",
                        "description": "Ad id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdReport"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad reports",
                        "schema": {
                            "$ref": "#/definitions/AdReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Creates a new ad report",
                "description": "Creates a new ad report",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "The ad report JSON you want to post",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/addAdReport"
                        }
                    }
                ],
                "tags": [
                    "AdReport"
                ],
                "responses": {
                    "200": {
                        "description": "New ad report added",
                        "schema": {
                            "$ref": "#/definitions/AdReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_reports/{adReportId}": {
            "get": {
                "summary": "Fetch ad report",
                "description": "Returns a ad report based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adReportId",
                        "in": "path",
                        "description": "ID of ad report to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdReport"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad report",
                        "schema": {
                            "$ref": "#/definitions/AdReport"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete ad report",
                "description": "Deletes a single ad report based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adReportId",
                        "in": "path",
                        "description": "ID of ad report to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdReport"
                ],
                "responses": {
                    "200": {
                        "description": "Ad Report deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_views": {
            "get": {
                "summary": "Fetch all ad views",
                "description": "Returns all ad views from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "ad_id",
                        "in": "query",
                        "description": "Ad id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdView"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad views",
                        "schema": {
                            "$ref": "#/definitions/AdView"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/ad_views/{adViewId}": {
            "delete": {
                "summary": "Delete ad view",
                "description": "Deletes a single ad view based on the ID supplied",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adViewId",
                        "in": "path",
                        "description": "ID of ad view to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdView"
                ],
                "responses": {
                    "200": {
                        "description": "Ad View deleted"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "summary": "Fetch ad view",
                "description": "Returns a ad view based on a single ID",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "adViewId",
                        "in": "path",
                        "description": "ID of ad view to fetch",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "tags": [
                    "AdView"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad view",
                        "schema": {
                            "$ref": "#/definitions/AdView"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": null
                    }
                }
            }
        },
        "/ad_form_fields": {
            "get": {
                "summary": "Fetch all ad form fields",
                "description": "Returns all ad form fields from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category id to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "AdFormField"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched ad form fields",
                        "schema": {
                            "$ref": "#/definitions/AdFormField"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/input_types": {
            "get": {
                "summary": "Fetch all input types",
                "description": "Returns all input types from the system",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "OAuth token",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Fields to sort",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "sortby",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields list to fetch",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords to search",
                        "required": false,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "tags": [
                    "InputType"
                ],
                "responses": {
                    "200": {
                        "description": "Fetched input types",
                        "schema": {
                            "$ref": "#/definitions/InputType"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "addUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "format": "string"
                },
                "password": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "forgotPasswordUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "changePasswordUser": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Old password"
                },
                "new_password": {
                    "type": "string",
                    "description": "New password"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "role_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "username": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "gender_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "dob": {
                    "type": "string",
                    "format": "date"
                },
                "about_me": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "address1": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "zip_code": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "phone": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "available_wallet_amount": {
                    "type": "number",
                    "format": "float"
                },
                "available_points": {
                    "type": "integer",
                    "format": "int64"
                },
                "billing_company_name": {
                    "type": "string"
                },
                "billing_address": {
                    "type": "string"
                },
                "billing_postal_code_1": {
                    "type": "string"
                },
                "billing_postal_code_2": {
                    "type": "string"
                },
                "billing_city": {
                    "type": "string"
                },
                "billing_tin": {
                    "type": "string"
                },
                "invoice_name": {
                    "type": "string"
                },
                "invoice_address": {
                    "type": "string"
                },
                "invoice_postal_code_1": {
                    "type": "string"
                },
                "invoice_postal_code_2": {
                    "type": "string"
                },
                "invoice_city": {
                    "type": "string"
                },
                "last_login_ip_id": {
                    "type": "string"
                },
                "last_logged_in_time": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_email_confirmed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_agree_terms_conditions": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_subscribed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_turn_off_automatic_fields": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_hide_my_ads": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "updateUser": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "about_me": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "city": {
                    "$ref": "#/definitions/editCity"
                },
                "state": {
                    "$ref": "#/definitions/editState"
                },
                "country": {
                    "$ref": "#/definitions/editCountry"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "image": {
                    "$ref": "#/definitions/addAttachment"
                }
            }
        },
        "addProvider": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addSociallogin": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "access_token": {
                    "type": "string"
                },
                "oauth_verifier": {
                    "type": "string"
                },
                "oauth_token": {
                    "type": "string"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "secret_key": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                },
                "icon_class": {
                    "type": "string"
                },
                "button_class": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "position": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addMoneyTransferAccount": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "MoneyTransferAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "account": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_primary": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addUserCashWithdrawal": {
            "type": "object",
            "properties": {
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "UserCashWithdrawal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "money_transfer_account_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "withdrawal_status_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "remark": {
                    "type": "string"
                }
            }
        },
        "addContact": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "ip_id": {
                    "type": "string"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "foreign_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "class": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "transaction_type": {
                    "type": "string"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addPaymentGateway": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PaymentGateway": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gateway_fees": {
                    "type": "number",
                    "format": "float"
                },
                "transaction_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_setting_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_test_mode": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_enable_for_wallet": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addPage": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "meta_keywords": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Page": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "meta_keywords": {
                    "type": "string"
                },
                "meta_description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "SettingCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "addSetting": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Setting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "setting_category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "setting_category_parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "position": {
                    "type": "integer",
                    "format": "int32"
                },
                "options": {
                    "type": "string"
                }
            }
        },
        "EmailTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "format": "string"
                },
                "display_name": {
                    "type": "string",
                    "format": "string"
                },
                "description": {
                    "type": "string",
                    "format": "string"
                },
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "email_variables": {
                    "type": "string",
                    "format": "string"
                },
                "html_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_email_content": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addEmailTemplate": {
            "type": "object",
            "properties": {
                "from": {
                    "type": "string",
                    "format": "string"
                },
                "reply_to": {
                    "type": "string",
                    "format": "string"
                },
                "subject": {
                    "type": "string",
                    "format": "string"
                },
                "html_email_content": {
                    "type": "string",
                    "format": "string"
                },
                "text_email_content": {
                    "type": "string",
                    "format": "string"
                }
            }
        },
        "addCity": {
            "type": "object",
            "properties": {
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "city_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "city_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addState": {
            "type": "object",
            "properties": {
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "State": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "state_code": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCountry": {
            "type": "object",
            "properties": {
                "iso_alpha2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                },
                "iso_numeric": {
                    "type": "integer",
                    "format": "int32"
                },
                "fips_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "capital": {
                    "type": "string"
                },
                "areainsqkm": {
                    "type": "number",
                    "format": "float"
                },
                "population": {
                    "type": "integer",
                    "format": "int32"
                },
                "continent": {
                    "type": "string"
                },
                "tld": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencyname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalcodeformat": {
                    "type": "string"
                },
                "postalcoderegex": {
                    "type": "string"
                },
                "languages": {
                    "type": "string"
                },
                "geonameid": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighbours": {
                    "type": "string"
                },
                "equivalentfipscode": {
                    "type": "string"
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "iso_alpha2": {
                    "type": "string"
                },
                "iso_alpha3": {
                    "type": "string"
                },
                "iso_numeric": {
                    "type": "integer",
                    "format": "int32"
                },
                "fips_code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "capital": {
                    "type": "string"
                },
                "areainsqkm": {
                    "type": "number",
                    "format": "float"
                },
                "population": {
                    "type": "integer",
                    "format": "int32"
                },
                "continent": {
                    "type": "string"
                },
                "tld": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "currencyname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "postalcodeformat": {
                    "type": "string"
                },
                "postalcoderegex": {
                    "type": "string"
                },
                "languages": {
                    "type": "string"
                },
                "geonameid": {
                    "type": "integer",
                    "format": "int32"
                },
                "neighbours": {
                    "type": "string"
                },
                "equivalentfipscode": {
                    "type": "string"
                }
            }
        },
        "addLanguage": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Language": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "iso2": {
                    "type": "string"
                },
                "iso3": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAttachment": {
            "type": "object",
            "properties": {
                "attachment": {
                    "type": "string"
                }
            }
        },
        "addWallet": {
            "type": "object",
            "required": [
                "amount",
                "payment_gateway_id",
                "gateway_id",
                "buyer_name",
                "buyer_email",
                "buyer_address",
                "buyer_city",
                "buyer_state",
                "buyer_country_iso2",
                "buyer_phone",
                "buyer_zipcode",
                "credit_card_code",
                "credit_card_expire",
                "credit_card_name_on_card",
                "credit_card_number"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zipcode": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "Wallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_payment_completed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addUserNotification": {
            "type": "object",
            "required": [
                "is_new_messages_received_notification_to_sms",
                "is_new_messages_received_notification_to_email",
                "is_new_ads_on_saved_searches_to_sms",
                "is_new_ads_on_saved_searches_to_email",
                "is_price_reduced_on_favorite_ads_to_sms",
                "is_price_reduced_on_favorite_ads_to_email"
            ],
            "properties": {
                "is_new_messages_received_notification_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_messages_received_notification_to_email": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_ads_on_saved_searches_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_ads_on_saved_searches_to_email": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_price_reduced_on_favorite_ads_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_price_reduced_on_favorite_ads_to_email": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "UserNotification": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_new_messages_received_notification_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_messages_received_notification_to_email": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_ads_on_saved_searches_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_new_ads_on_saved_searches_to_email": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_price_reduced_on_favorite_ads_to_sms": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_price_reduced_on_favorite_ads_to_email": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addUserAdExtra": {
            "type": "object",
            "required": [
                "ad_id",
                "ad_extra_id",
                "ad_extra_day_id",
                "amount",
                "payment_gateway_id",
                "gateway_id",
                "buyer_name",
                "buyer_email",
                "buyer_address",
                "buyer_city",
                "buyer_state",
                "buyer_country_iso2",
                "buyer_phone",
                "buyer_zipcode",
                "credit_card_code",
                "credit_card_expire",
                "credit_card_name_on_card",
                "credit_card_number"
            ],
            "properties": {
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_extra_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_extra_day_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zipcode": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UserAdExtra": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_extra_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_extra_day_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zipcode": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addUserAdPackage": {
            "type": "object",
            "required": [
                "ad_package_id",
                "payment_gateway_id",
                "gateway_id",
                "buyer_name",
                "buyer_email",
                "buyer_address",
                "buyer_city",
                "buyer_state",
                "buyer_country_iso2",
                "buyer_phone",
                "buyer_zipcode",
                "credit_card_code",
                "credit_card_expire",
                "credit_card_name_on_card",
                "credit_card_number"
            ],
            "properties": {
                "ad_package_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zipcode": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "UserAdPackage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_package_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "allowed_ad_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "points": {
                    "type": "integer",
                    "format": "int32"
                },
                "used_points": {
                    "type": "integer",
                    "format": "int32"
                },
                "expiry_date": {
                    "type": "string"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_payment_completed": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addMessage": {
            "type": "object",
            "required": [
                "other_user_id",
                "ad_id",
                "message"
            ],
            "properties": {
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "is_read": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_archived": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string",
                    "format": "string"
                },
                "from_ad_post_view": {
                    "type": "string",
                    "format": "string"
                }                
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "other_user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message_content_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_sender": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_read": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_archived": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addCategory": {
            "type": "object",
            "required": [
                "name",
                "allowed_free_ads_count",
                "post_ad_fee",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "allowed_free_ads_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "post_ad_fee": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_popular": {
                    "type": "integer",
                    "format": "int32"
                },
                "image": {
                    "type": "string",
                    "format": "string"
                },
                "form_field": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addFormField"
                    }
                }
            }
        },
        "addFormField": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field name"
                },
                "display_name": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field display_name"
                },
                "label": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field label"
                },
                "input_type_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Form field input type"
                },
                "info": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field info"
                },
                "is_required": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Form field is required or not"
                },
                "depends_on": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field depends on"
                },
                "depend_value": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field depend value"
                },
                "display_order": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Form field display_order"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Form field is active or not"
                },
                "options": {
                    "type": "string"
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "parent_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "allowed_free_ads_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "post_ad_fee": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAdvertiserType": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "AdvertiserType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "addAdPackage": {
            "type": "object",
            "required": [
                "category_id",
                "name",
                "validity_days",
                "amount",
                "additional_ads_allowed",
                "is_unlimited_ads",
                "credit_points",
                "points_valid_days",
                "is_active"
            ],
            "properties": {
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "validity_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "additional_ads_allowed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_unlimited_ads": {
                    "type": "integer",
                    "format": "int32"
                },
                "credit_points": {
                    "type": "integer",
                    "format": "int32"
                },
                "points_valid_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AdPackage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "validity_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "additional_ads_allowed": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_unlimited_ads": {
                    "type": "integer",
                    "format": "int32"
                },
                "credit_points": {
                    "type": "integer",
                    "format": "int32"
                },
                "points_valid_days": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AdExtra": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAdExtraDay": {
            "type": "object",
            "required": [
                "ad_extra_id",
                "category_id",
                "days",
                "amount",
                "is_active"
            ],
            "properties": {
                "ad_extra_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "days": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AdExtraDay": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "ad_extra_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "days": {
                    "type": "integer",
                    "format": "int32"
                },
                "amount": {
                    "type": "number",
                    "format": "float"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAd": {
            "type": "object",
            "required": [
                "title",
                "category_id",
                "advertiser_type_id",
                "is_an_exchange_item",
                "price",
                "is_negotiable",
                "description",
                "city_name",
                "country_iso2",
                "location",
                "latitude",
                "longitude",
                "advertiser_name",
                "phone_number",
                "payment_gateway_id",
                "gateway_id",
                "buyer_name",
                "buyer_email",
                "buyer_address",
                "buyer_city",
                "buyer_state",
                "buyer_country_iso2",
                "buyer_phone",
                "buyer_zipcode",
                "credit_card_code",
                "credit_card_expire",
                "credit_card_name_on_card",
                "credit_card_number"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "advertiser_type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_an_exchange_item": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "is_negotiable": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "state_name": {
                    "type": "string"
                },
                "country_iso2": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "is_send_email_when_user_contact": {
                    "type": "integer",
                    "format": "int32"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "advertiser_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_fee": {
                    "type": "number",
                    "format": "float"
                },
                "image": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addImage"
                    }
                },
                "ad_form_field": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/adFormField"
                    }
                },
                "ad_extra_id": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/addAdExtras"
                    }
                },
                "payment_gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "gateway_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_name": {
                    "type": "string"
                },
                "buyer_email": {
                    "type": "string"
                },
                "buyer_address": {
                    "type": "string"
                },
                "buyer_city": {
                    "type": "string"
                },
                "buyer_state": {
                    "type": "string"
                },
                "buyer_country_iso2": {
                    "type": "string"
                },
                "buyer_phone": {
                    "type": "integer",
                    "format": "int64"
                },
                "buyer_zipcode": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "adFormField": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "field": {
                    "type": "string",
                    "format": "string",
                    "description": "Form field name"
                }
            }
        },
        "addImage": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "image": {
                    "type": "string",
                    "format": "string",
                    "description": "Image"
                }
            }
        },
        "addAdExtras": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "addAdExtra": {
            "type": "object",
            "required": [
                "name",
                "is_active"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "Ad": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "title": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "advertiser_type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_an_exchange_item": {
                    "type": "integer",
                    "format": "int32"
                },
                "price": {
                    "type": "number",
                    "format": "float"
                },
                "is_negotiable": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "state_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "country_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "location": {
                    "type": "string"
                },
                "is_send_email_when_user_contact": {
                    "type": "integer",
                    "format": "int32"
                },
                "latitude": {
                    "type": "number",
                    "format": "float"
                },
                "longitude": {
                    "type": "number",
                    "format": "float"
                },
                "hash": {
                    "type": "string"
                },
                "is_show_as_top_ads": {
                    "type": "integer",
                    "format": "int32"
                },
                "advertiser_name": {
                    "type": "string"
                },
                "ad_in_top_end_date": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "top_ads_end_date": {
                    "type": "string"
                },
                "is_show_ad_in_top": {
                    "type": "integer",
                    "format": "int32"
                },
                "urgent_end_date": {
                    "type": "string"
                },
                "highlighted_end_date": {
                    "type": "string"
                },
                "is_removed_by_admin": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_urgent": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_highlighted": {
                    "type": "integer",
                    "format": "int32"
                },
                "ad_view_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_favorite_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAdFavorite": {
            "type": "object",
            "required": [
                "ad_id"
            ],
            "properties": {
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "SearchKeyword": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "keyword": {
                    "type": "string"
                },
                "search_log_count": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AdFavorite": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAdSearch": {
            "type": "object",
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_search_in_description": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_only_ads_with_images": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_notify_whenever_new_ads_posted": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "AdSearch": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "keyword": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_search_in_description": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_only_ads_with_images": {
                    "type": "integer",
                    "format": "int32"
                },
                "is_notify_whenever_new_ads_posted": {
                    "type": "integer",
                    "format": "int32"
                },
                "ip_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addAdReportType": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "AdReportType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "addAdReport": {
            "type": "object",
            "required": [
                "ad_id",
                "ad_report_type_id",
                "message"
            ],
            "properties": {
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_report_type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "AdReport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_report_type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "AdFormField": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "form_field_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "response": {
                    "type": "string"
                }
            }
        },
        "AdView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ad_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ip_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "editCountry": {
            "type": "object",
            "properties": {
                "iso_alpha2": {
                    "type": "string"
                }
            }
        },
        "editState": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "editCity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "InputType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "addPostGateway": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name value."
                }
            }
        },
        "updatePaymentGateways": {
            "type": "object",
            "properties": {
                "zazpay_merchant_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "zazpay_merchant_id."
                },
                "zazpay_website_id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "zazpay_website_id"
                },
                "zazpay_secret_string": {
                    "type": "integer",
                    "format": "int64",
                    "description": "zazpay_secret_string."
                },
                "zazpay_api_key": {
                    "type": "integer",
                    "format": "int64",
                    "description": "zazpay_api_key."
                }
            }
        },
        "WithdrawalStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "created_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Plugin": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "updatePlugin": {
            "type": "object",
            "properties": {
                "is_enabled": {
                    "type": "integer",
                    "format": "int64"
                },
                "plugin": {
                    "type": "string"
                }
            }
        },        
        "addVault": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "credit_card_expire": {
                    "type": "string"
                },
                "credit_card_name_on_card": {
                    "type": "string"
                }
            }
        },
        "Vault": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "masked_cc": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "vault_key": {
                    "type": "string"
                },
                "vault_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "addPaypalVault": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "cvv2": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "string"
                },
                "expire_year": {
                    "type": "string"
                },
                "credit_card_number": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                }
            }
        },
        "PaypalVault": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "created": {
                    "type": "string"
                },
                "modified": {
                    "type": "string"
                },
                "masked_cc": {
                    "type": "string"
                },
                "credit_card_type": {
                    "type": "string"
                },
                "vault_key": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}
